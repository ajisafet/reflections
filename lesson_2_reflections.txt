What happens when you initialize a repository? Why do you need to do it?
You create a folder in which changes to its files can be tracked by Git.

You do it to group related files and be able to track changes to them.

How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area contains only files that you deem eligible to be ready for the next commit. While the working directory contains tiles that are you have not ready for the next commit.
Also the the repository holds all files and history of changed files including the files in the staging area.

How can you use the staging area to make sure you have one commit per logical change?
By adding files to the staging area that are affected by the same logical change

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

As a means of keeping track of major releases or changes in code
As a means of version control


How do the diagrams help you visualize the branch structure?
It helps you see the interlock between the branches and where they diverge.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Whne merging it copies the fdifferences between files. Also the merges moves the 


What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Git's automatic mergin 
Pros: Makes merging easier and quicker
Cons: Can make merges that don't make sense and can break code

Manual merging
Pros: Allows the developers who have made conflicting changes to decide how to resolve conflicts with less possibility for errors/bugs. Gives developers more control
Cons: Some conflicts may be easily resolved by auto-merging but may be difficult for Git to decide


